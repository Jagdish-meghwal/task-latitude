[{"/home/jagdish/Desktop/project/youtub/memory-project/client/src/index.js":"1","/home/jagdish/Desktop/project/youtub/memory-project/client/src/App.js":"2","/home/jagdish/Desktop/project/youtub/memory-project/client/src/components/Posts/Posts.js":"3","/home/jagdish/Desktop/project/youtub/memory-project/client/src/components/Form/Form.js":"4","/home/jagdish/Desktop/project/youtub/memory-project/client/src/styles.js":"5","/home/jagdish/Desktop/project/youtub/memory-project/client/src/components/Posts/styles.js":"6","/home/jagdish/Desktop/project/youtub/memory-project/client/src/reducers/index.js":"7","/home/jagdish/Desktop/project/youtub/memory-project/client/src/reducers/posts.js":"8","/home/jagdish/Desktop/project/youtub/memory-project/client/src/action/posts.js":"9","/home/jagdish/Desktop/project/youtub/memory-project/client/src/api/index.js":"10","/home/jagdish/Desktop/project/youtub/memory-project/client/src/components/Form/styles.js":"11","/home/jagdish/Desktop/project/youtub/memory-project/client/src/components/Posts/Post/Post.js":"12","/home/jagdish/Desktop/project/youtub/memory-project/client/src/components/Posts/Post/styles.js":"13","/home/jagdish/Desktop/project/task/task-latitude1/client/src/index.js":"14","/home/jagdish/Desktop/project/task/task-latitude1/client/src/App.js":"15","/home/jagdish/Desktop/project/task/task-latitude1/client/src/reducers/index.js":"16","/home/jagdish/Desktop/project/task/task-latitude1/client/src/styles.js":"17","/home/jagdish/Desktop/project/task/task-latitude1/client/src/action/posts.js":"18","/home/jagdish/Desktop/project/task/task-latitude1/client/src/components/Posts/Posts.js":"19","/home/jagdish/Desktop/project/task/task-latitude1/client/src/reducers/posts.js":"20","/home/jagdish/Desktop/project/task/task-latitude1/client/src/components/Posts/styles.js":"21","/home/jagdish/Desktop/project/task/task-latitude1/client/src/components/Posts/Post/Post.js":"22","/home/jagdish/Desktop/project/task/task-latitude1/client/src/components/Posts/Post/styles.js":"23"},{"size":432,"mtime":1612059212351,"results":"24","hashOfConfig":"25"},{"size":1432,"mtime":1612062905087,"results":"26","hashOfConfig":"25"},{"size":652,"mtime":1612153340738,"results":"27","hashOfConfig":"25"},{"size":2731,"mtime":1612093416460,"results":"28","hashOfConfig":"25"},{"size":350,"mtime":1612009076977,"results":"29","hashOfConfig":"25"},{"size":265,"mtime":1612009073376,"results":"30","hashOfConfig":"25"},{"size":123,"mtime":1612058284443,"results":"31","hashOfConfig":"25"},{"size":239,"mtime":1612093412656,"results":"32","hashOfConfig":"25"},{"size":571,"mtime":1612092962135,"results":"33","hashOfConfig":"25"},{"size":176,"mtime":1612092659293,"results":"34","hashOfConfig":"25"},{"size":424,"mtime":1612009070682,"results":"35","hashOfConfig":"25"},{"size":1377,"mtime":1612153444176,"results":"36","hashOfConfig":"25"},{"size":962,"mtime":1612056276078,"results":"37","hashOfConfig":"25"},{"size":452,"mtime":1612264914894,"results":"38","hashOfConfig":"39"},{"size":945,"mtime":1612264817790,"results":"40","hashOfConfig":"39"},{"size":123,"mtime":1612058284443,"results":"41","hashOfConfig":"39"},{"size":318,"mtime":1612265077372,"results":"42","hashOfConfig":"39"},{"size":424,"mtime":1612261182375,"results":"43","hashOfConfig":"39"},{"size":651,"mtime":1612261333351,"results":"44","hashOfConfig":"39"},{"size":181,"mtime":1612260672126,"results":"45","hashOfConfig":"39"},{"size":171,"mtime":1612261796448,"results":"46","hashOfConfig":"39"},{"size":629,"mtime":1612262176397,"results":"47","hashOfConfig":"39"},{"size":435,"mtime":1612262276036,"results":"48","hashOfConfig":"39"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},"16631z4",{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"51"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"51"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"51"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"51"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"nxnkdp",{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"86"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"86"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},"/home/jagdish/Desktop/project/youtub/memory-project/client/src/index.js",[],["104","105"],"/home/jagdish/Desktop/project/youtub/memory-project/client/src/App.js",[],"/home/jagdish/Desktop/project/youtub/memory-project/client/src/components/Posts/Posts.js",[],"/home/jagdish/Desktop/project/youtub/memory-project/client/src/components/Form/Form.js",["106"],"import { Button, Paper, TextField, Typography } from '@material-ui/core'\nimport useStyles from './styles'\nimport React, { useState } from 'react'\nimport FileBase from 'react-file-base64'\nimport { createPost } from '../../action/posts'\nimport { useDispatch } from 'react-redux'\nconst Form = () => {\n    const classes = useStyles();\n    const [postData,setPostData]=useState({\n        creator:'',\n        title:'',\n        message:'',\n        tags:'',\n        selectedFile:''\n\n    })\n    const dispatch = useDispatch();\n    const handleSubmit=(e)=>{\n        e.preventDefault();\n        dispatch(createPost(postData));\n\n    }\n    const clear=()=>{\n\n    }\n\n    return (\n        <Paper className={classes.paper}>\n            <form autoComplete=\"off\" noValidate className={classes.form} onSubmit={handleSubmit}>\n                <Typography variant=\"h6\">Creating a memory</Typography>\n                <TextField\n                   name=\"creator\"\n                   variant=\"outlined\"\n                   label=\"Creator\"\n                   fullWidth\n                   value={postData.creator}\n                   onChange={(e)=>setPostData({...postData,creator:e.target.value})}\n                />\n                <TextField\n                   name=\"title\"\n                   variant=\"outlined\"\n                   label=\"Title\"\n                   fullWidth\n                   value={postData.title}\n                   onChange={(e)=>setPostData({...postData,title:e.target.value})}\n                />\n                <TextField\n                   name=\"message\"\n                   variant=\"outlined\"\n                   label=\"Message\"\n                   fullWidth\n                   value={postData.message}\n                   onChange={(e)=>setPostData({...postData,message:e.target.value})}\n                />\n                <TextField\n                   name=\"tags\"\n                   variant=\"outlined\"\n                   label=\"tags\"\n                   fullWidth\n                   value={postData.tags}\n                   onChange={(e)=>setPostData({...postData,tags:e.target.value})}\n                />\n                <div className={classes.fileInput}>\n                    <FileBase\n                       type=\"file\"\n                       multiple={false}\n                       onDone={({base64})=>setPostData({...postData,selectedFile:base64})}\n                    />\n                </div>\n                <Button className={classes.buttonSubmit} variant=\"contained\" color=\"primary\" size=\"large\" type=\"submit\" fullWidth>Submit</Button>\n                <Button variant=\"contained\" color=\"secondary\" size=\"small\" /* onClick={clear} */ fullWidth>Clear</Button>\n            </form>\n\n        </Paper>\n    )\n}\n\nexport default Form\n","/home/jagdish/Desktop/project/youtub/memory-project/client/src/styles.js",[],"/home/jagdish/Desktop/project/youtub/memory-project/client/src/components/Posts/styles.js",[],"/home/jagdish/Desktop/project/youtub/memory-project/client/src/reducers/index.js",[],"/home/jagdish/Desktop/project/youtub/memory-project/client/src/reducers/posts.js",["107"],"export default (posts=[],action)=>{\n    switch(action.type){\n       case 'FETCH_ALL':\n           return action.payload;\n\n       case 'CREATE':\n           return [...posts, action.payload];\n\n        default:\n           return posts;\n    }\n}","/home/jagdish/Desktop/project/youtub/memory-project/client/src/action/posts.js",["108"],"import { AccordionActions } from '@material-ui/core';\nimport * as api from '../api'\nexport const getPosts=()=>async(dispatch)=>{\n    \n    try{\n        const {data} =await api.fetchPosts();\n        dispatch({\n            type:'FETCH_ALL',\n            payload:data\n        })\n    }\n    catch(error){\n        console.log(error.message);\n\n    }\n}\n\nexport const createPost=(post)=>async (dispatch)=>{\n    try {\n        const { data } =await api.createPost(post);\n        dispatch({type:'CREATE',payload:data});\n    } catch (error) {\n        console.log(error.message);\n    }\n}","/home/jagdish/Desktop/project/youtub/memory-project/client/src/api/index.js",[],"/home/jagdish/Desktop/project/youtub/memory-project/client/src/components/Form/styles.js",[],"/home/jagdish/Desktop/project/youtub/memory-project/client/src/components/Posts/Post/Post.js",["109","110","111","112","113","114"],"import React from 'react';\nimport { Card, CardActions, CardContent, CardMedia, Button, Typography } from '@material-ui/core/';\nimport ThumbUpAltIcon from '@material-ui/icons/ThumbUpAlt';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\nimport moment from 'moment';\nimport { useDispatch } from 'react-redux';\n\nimport useStyles from './styles';\n\nconst Post = ({ post }) => {\n\n  const classes = useStyles();\n\n  return (\n    <Card className={classes.card}>\n      <CardMedia className={classes.media} image={post.selectedFile || 'https://user-images.githubusercontent.com/194400/49531010-48dad180-f8b1-11e8-8d89-1e61320e1d82.png'} title={post.title} />\n      <div className={classes.overlay}>\n        <Typography variant=\"h6\">{post.creator}</Typography>\n        <Typography variant=\"body2\">{moment(post.createdAt).fromNow()}</Typography>\n      </div>\n      <div className={classes.details}>\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"h2\">{post.tags.map((tag) => `#${tag} `)}</Typography>\n      </div>\n      <Typography className={classes.title} gutterBottom variant=\"h5\" component=\"h2\">{post.title}</Typography>\n      <CardContent>\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">{post.message}</Typography>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default Post;\n","/home/jagdish/Desktop/project/youtub/memory-project/client/src/components/Posts/Post/styles.js",[],["115","116"],"/home/jagdish/Desktop/project/task/task-latitude1/client/src/index.js",[],"/home/jagdish/Desktop/project/task/task-latitude1/client/src/App.js",["117","118"],"import React, { useEffect } from 'react'\nimport {AppBar, Container, Grid, Grow, Typography} from '@material-ui/core'\nimport Posts from './components/Posts/Posts'\nimport useStyles from './styles'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getPosts } from './action/posts'\n\nconst App = () => {\n    const classes=useStyles()\n    const posts = useSelector((state) => state.posts);\n    console.log(posts);\n    const dispatch = useDispatch();\n    useEffect(() => {\n        dispatch(getPosts());\n    }, [dispatch])\n    return (\n        <Container maxwidth=\"lg\">\n            <AppBar className={classes.appBar} position=\"static\" color=\"inherit\" >\n                <Typography className={classes.heading} varient=\"h2\" align=\"center\">\n                     Post Collection \n                </Typography>\n            </AppBar>\n            <Posts />                                        \n        </Container>\n    )\n}\n\nexport default App\n",["119","120"],"/home/jagdish/Desktop/project/task/task-latitude1/client/src/reducers/index.js",[],"/home/jagdish/Desktop/project/task/task-latitude1/client/src/styles.js",[],"/home/jagdish/Desktop/project/task/task-latitude1/client/src/action/posts.js",[],"/home/jagdish/Desktop/project/task/task-latitude1/client/src/components/Posts/Posts.js",[],"/home/jagdish/Desktop/project/task/task-latitude1/client/src/reducers/posts.js",["121"],"export default (posts=[],action)=>{\n    switch(action.type){\n       case 'FETCH_ALL':\n           return action.payload;\n           \n        default:\n           return posts;\n    }\n}","/home/jagdish/Desktop/project/task/task-latitude1/client/src/components/Posts/styles.js",[],"/home/jagdish/Desktop/project/task/task-latitude1/client/src/components/Posts/Post/Post.js",[],"/home/jagdish/Desktop/project/task/task-latitude1/client/src/components/Posts/Post/styles.js",[],{"ruleId":"122","replacedBy":"123"},{"ruleId":"124","replacedBy":"125"},{"ruleId":"126","severity":1,"message":"127","line":23,"column":11,"nodeType":"128","messageId":"129","endLine":23,"endColumn":16},{"ruleId":"130","severity":1,"message":"131","line":1,"column":1,"nodeType":"132","endLine":12,"endColumn":2},{"ruleId":"126","severity":1,"message":"133","line":1,"column":10,"nodeType":"128","messageId":"129","endLine":1,"endColumn":26},{"ruleId":"126","severity":1,"message":"134","line":2,"column":16,"nodeType":"128","messageId":"129","endLine":2,"endColumn":27},{"ruleId":"126","severity":1,"message":"135","line":2,"column":53,"nodeType":"128","messageId":"129","endLine":2,"endColumn":59},{"ruleId":"126","severity":1,"message":"136","line":3,"column":8,"nodeType":"128","messageId":"129","endLine":3,"endColumn":22},{"ruleId":"126","severity":1,"message":"137","line":4,"column":8,"nodeType":"128","messageId":"129","endLine":4,"endColumn":18},{"ruleId":"126","severity":1,"message":"138","line":5,"column":8,"nodeType":"128","messageId":"129","endLine":5,"endColumn":21},{"ruleId":"126","severity":1,"message":"139","line":7,"column":10,"nodeType":"128","messageId":"129","endLine":7,"endColumn":21},{"ruleId":"122","replacedBy":"140"},{"ruleId":"124","replacedBy":"141"},{"ruleId":"126","severity":1,"message":"142","line":2,"column":28,"nodeType":"128","messageId":"129","endLine":2,"endColumn":32},{"ruleId":"126","severity":1,"message":"143","line":2,"column":34,"nodeType":"128","messageId":"129","endLine":2,"endColumn":38},{"ruleId":"122","replacedBy":"144"},{"ruleId":"124","replacedBy":"145"},{"ruleId":"130","severity":1,"message":"131","line":1,"column":1,"nodeType":"132","endLine":9,"endColumn":2},"no-native-reassign",["146"],"no-negated-in-lhs",["147"],"no-unused-vars","'clear' is assigned a value but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'AccordionActions' is defined but never used.","'CardActions' is defined but never used.","'Button' is defined but never used.","'ThumbUpAltIcon' is defined but never used.","'DeleteIcon' is defined but never used.","'MoreHorizIcon' is defined but never used.","'useDispatch' is defined but never used.",["146"],["147"],"'Grid' is defined but never used.","'Grow' is defined but never used.",["146"],["147"],"no-global-assign","no-unsafe-negation"]